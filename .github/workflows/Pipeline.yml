# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: clean with Maven
      run: mvn clean --file my-app/pom.xml
      
      
    - name: compile with Maven
      run: mvn compile --file my-app/pom.xml

    - name: Build with Maven
      run: mvn -B package --file my-app/pom.xml 
    - name: ls -HR my-app/*.java
      run: ls -HR my-app/ | grep *.java
#     - run: mvn --batch-mode --update-snapshots verify --file my-app/pom.xml
#     - run: mkdir /tmp/staging && cp /tmp/target/*.jar staging
#     - uses: actions/upload-artifact@v3
#       with:
#         name: Package
#         path: staging
    
#     - name: cd to /home/runner/work/maven-hello-world/maven-hello-world/settings.xml
#       run: cd /home/runner/work/maven-hello-world/maven-hello-world/
    
#     - name: Generate settings.xml for Maven Builds
#       uses: whelk-io/maven-settings-xml-action@v20
#       with:
#         output_file: /home/runner/work/maven-hello-world/maven-hello-world/settings.xml

    
#     - name: Publish to GitHub Packages Apache Maven
#       run: mvn deploy  -s $GITHUB_WORKSPACE/settings.xml  --file my-app/pom.xml
#       env:
#         GITHUB_TOKEN: ${{ github.token }}
