# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: clean with Maven
      run: mvn clean --file my-app/pom.xml
      
      
    - name: compile with Maven
      run: mvn compile --file my-app/pom.xml

    - name: Build with Maven
      run: mvn -B package --file my-app/pom.xml 
    - name: ls -HR my-app/*.java
      run: ls -HR my-app/
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        path: my-app/src/main/java/com/mycompany/app/App.java
        name: App.Java
      
    - name: create dockerfile
      run: |
          cat << EOF > my-app/src/main/java/com/mycompany/app/Dockerfile
          FROM openjdk:8-jre-alpine3.9
          COPY my-app/src/main/java/com/mycompany/app/App.java /App.java
          CMD ["java", "-jar", "/App.java"]
          EOF
          
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: Dockerfile
        path: my-app/src/main/java/com/mycompany/app/Dockerfile
        
#     - name: docker build
#       run: docker build . --file /home/runner/work/maven-hello-world/maven-hello-world/my-app/src/main/java/com/mycompany/app/Dockerfile . --tag pikacho/helloworld:latest
    - uses: actions/checkout@v3
    
    - name: Build image
      uses: docker/build-push-action@v2
      with:
        tags: pikacho/pikachohelloworld:latest
        file: /home/runner/work/maven-hello-world/maven-hello-world/my-app/src/main/java/com/mycompany/app/Dockerfile 
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
                
    - name: Push image
      uses: docker/build-push-action@v2
      with:
       push: true
       tags: pikacho/helloworld:latest
       file: /home/runner/work/maven-hello-world/maven-hello-world/my-app/src/main/java/com/mycompany/app/Dockerfile .



    

 
